-- MySQL Script generated by MySQL Workbench
-- Mon Feb  6 19:01:16 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema board_maker
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema board_maker
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `board_maker` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `board_maker` ;

-- -----------------------------------------------------
-- Table `board_maker`.`member_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`member_table` (
  `mbr_code` VARCHAR(36) NOT NULL COMMENT '멤버 코드 : UUID가 들어간다.',
  `mbr_id` VARCHAR(12) NOT NULL COMMENT '아이디 : 4~12글자까지 영문으로 입력받을 수 있다.',
  `mbr_pw` VARCHAR(100) NOT NULL COMMENT '비밀번호 : 8~20자까지 영문으로 입력받을 수 있다. 대문자와 특수기호가 들어가야 한다.\\n암호화되어 해쉬 코드가 저장된다.',
  `mbr_nickname` VARCHAR(6) NOT NULL COMMENT '닉네임 : 2~6자까지 한글로 입력받을 수 있다. ',
  `mbr_photo` VARCHAR(255) NULL DEFAULT NULL COMMENT '프로필 사진 : 프로필 사진 링크를 저장한다.',
  `mbr_email` VARCHAR(45) NOT NULL COMMENT '이메일 : ~@~의 형태만 들어갈 수 있다.',
  `mbr_cert_number` VARCHAR(45) NULL DEFAULT NULL COMMENT '인증번호 : \\n1. 가입 시, 이메일 인증번호가 저장된다. 정식 가입 후, 삭제된다.\\n2. 비밀번호 찾기 시, 재설정번호가 저장된다. 비밀번호 재설정 후 삭제된다(설정하지 않아도 스케줄러에 위하여, 5분 뒤 자동 삭제된다).',
  `mbr_state` VARCHAR(1) NOT NULL COMMENT '※ 구분치\\n0 : 가입 대기(이메일 미인증)\\n1 : 가입\\n2 : 탈퇴',
  `mbr_grade` INT NOT NULL COMMENT '※ 등급치\\n유저 : 7\\n스탭 : 3\\n어드민 : 1',
  `mbr_score` INT NOT NULL COMMENT '회원점수 : 이 점수에서 상벌로 증감, 차감될 수 있다.',
  `mbr_block_date` DATETIME NULL DEFAULT NULL COMMENT '차단기한 : 이 항목이 생겼다면, 지정된 시간까지 로그인할 수 없다.',
  `mbr_signup_date` DATETIME NOT NULL COMMENT '가입날짜 : 가입시간을 입력받는다.',
  `mbr_signin_date` DATETIME NULL DEFAULT NULL COMMENT '로그인날짜 : 로그인 날짜를 입력받는다.',
  PRIMARY KEY (`mbr_code`),
  UNIQUE INDEX `mbr_id_UNIQUE` (`mbr_id` ASC) VISIBLE,
  UNIQUE INDEX `mbr_nickname_UNIQUE` (`mbr_nickname` ASC) VISIBLE,
  UNIQUE INDEX `mbr_email_UNIQUE` (`mbr_email` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`alarm_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`alarm_table` (
  `arm_issue_code` VARCHAR(36) NOT NULL COMMENT '알람 코드 : UUID가 들어간다.',
  `arm_mbr_code` VARCHAR(36) NOT NULL COMMENT '해당 멤버를 향하여 알람을 저장한다.',
  `arm_title_division` VARCHAR(1) NOT NULL COMMENT '알람타이틀구분치\\n\\n변경이 발생할 때마다, 시스템이 해당 구분치에 해당하는 이슈 제목을 배당한다.\\n\\n1 : 글 운영진 삭제\\n2 : 글 운영진 내림\\n3 : 댓글 운영진 삭제\\n4 : 추천 게시판 이동 \\n5 : 댓글 알림\\n6 : 벌점 알림\\n7 : 권한 이동',
  `arm_detail` VARCHAR(50) NOT NULL COMMENT '알람 내용이다.',
  `arm_url` VARCHAR(255) NULL DEFAULT NULL COMMENT '이슈 URL',
  `arm_issue_date` DATETIME NOT NULL COMMENT '알람 이슈 발생 시간을 저장한다.',
  `delete_flag` VARCHAR(1) NULL DEFAULT NULL COMMENT '읽음 표시',
  PRIMARY KEY (`arm_issue_code`),
  INDEX `fk_mbr_code5_idx` (`arm_mbr_code` ASC) VISIBLE,
  CONSTRAINT `fk_mbr_code5`
    FOREIGN KEY (`arm_mbr_code`)
    REFERENCES `board_maker`.`member_table` (`mbr_code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`category_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`category_table` (
  `ctgry_en_name` VARCHAR(30) NOT NULL COMMENT '카테고리영문명칭 : 해당 카테고리의 영문명을 저장한다.',
  `ctgry_symbol` VARCHAR(1) NOT NULL COMMENT '카테고리상징 : 해당 카테고리를 상징하는 한글자의 이모지를 저장한다.',
  `ctgry_name` VARCHAR(10) NOT NULL COMMENT '카테고리명칭 : 카테고리 이름을 저장한다.',
  `ctgry_detail` VARCHAR(100) NOT NULL COMMENT '카테고리설명 : 해당 카테고리에 대한 설명을 100글자 이내로 작성한다.',
  `ctgry_order` VARCHAR(3) NOT NULL COMMENT '카테고리순서 : 카테고리의 순서를 나타낸다.\\n\\n※ 1번째 자릿값(대분류)\\n1 : 상단\\n2 : 중앙\\n3 : 하단\\n\\n※ 2~3번째 자릿값(소분류)\\n1번째 자릿값에서 오름차순으로 재배열한다.',
  `ctgry_need` INT NULL DEFAULT NULL COMMENT '추천이동수 : 지정된 추천수에 이르면, 해당 카테고리의 게시물은 추천게시판으로 이동한다.',
  `delete_flag` VARCHAR(1) NULL DEFAULT NULL COMMENT '폐쇄여부 : 카테고리 개폐 여부를 결정한다.',
  PRIMARY KEY (`ctgry_en_name`),
  UNIQUE INDEX `ctgry_name_UNIQUE` (`ctgry_name` ASC) VISIBLE,
  UNIQUE INDEX `ctgry_order_UNIQUE` (`ctgry_order` ASC) VISIBLE,
  UNIQUE INDEX `ctgry_symbol_UNIQUE` (`ctgry_symbol` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`writing_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`writing_table` (
  `wrt_write_num` INT NOT NULL AUTO_INCREMENT COMMENT '글번호',
  `wrt_mbr_code` VARCHAR(36) NOT NULL COMMENT '회원코드 : 멤버 테이블의 닉네임과 등급을 가져온다.',
  `wrt_ctgry_en_name` VARCHAR(30) NOT NULL COMMENT '카테고리영문명칭 : 카테고리 테이블의 명칭, 추천수, 상징아이콘을 가져온다.',
  `wrt_title` VARCHAR(50) NOT NULL COMMENT '글제목',
  `wrt_detail` TEXT NOT NULL COMMENT '글내용',
  `wrt_write_date` DATETIME NOT NULL COMMENT '작성시간',
  `wrt_modify_date` DATETIME NULL DEFAULT NULL COMMENT '글수정시간 : 시간값이 존재하면 수정한 것으로 간주한다.',
  `wrt_views` INT NOT NULL COMMENT '조회수',
  `wrt_lift` VARCHAR(1) NULL DEFAULT NULL COMMENT '끌어올림여부',
  `wrt_hidden` VARCHAR(1) NULL DEFAULT NULL COMMENT '비밀글여부',
  `wrt_division` VARCHAR(2) NOT NULL DEFAULT '00' COMMENT '左1 운영진삭제\\n左2 작성자삭제\\n右1 운영진내림\\n右2 작성자내림',
  PRIMARY KEY (`wrt_write_num`),
  INDEX `fk_mbr_code_idx` (`wrt_mbr_code` ASC) VISIBLE,
  INDEX `fk_ctgry_en_name_idx` (`wrt_ctgry_en_name` ASC) VISIBLE,
  CONSTRAINT `fk_ctgry_en_name2`
    FOREIGN KEY (`wrt_ctgry_en_name`)
    REFERENCES `board_maker`.`category_table` (`ctgry_en_name`),
  CONSTRAINT `fk_mbr_code`
    FOREIGN KEY (`wrt_mbr_code`)
    REFERENCES `board_maker`.`member_table` (`mbr_code`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`comments_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`comments_table` (
  `cmt_wrt_write_num` INT NOT NULL COMMENT '글번호 : 글 테이블의 고유값인 글번호를 가져옴으로, 어느 글에 달릴 댓글타래인지 알린다.',
  `cmt_parent` INT NOT NULL COMMENT '댓글, \\n글번호와 댓글번호, 대댓글번호를 쌍으로 복합키를 이룬다. 댓글이 최초 작성될 때(대댓글이 없는 부모댓글이 작성되었을 경우), 대댓글 값은 0이다.',
  `cmt_child` INT NOT NULL COMMENT '대댓글',
  `cmt_code` VARCHAR(36) NOT NULL COMMENT '댓글코드 : UUID가 들어간다.',
  `cmt_detail` VARCHAR(500) NULL DEFAULT NULL COMMENT '코멘트내용',
  `cmt_wrt_mbr_code` VARCHAR(36) NOT NULL COMMENT '회원코드 : 멤버 테이블에서 상속된 글 테이블의 키(회원코드)로, 닉네임과 등급과 프로필사진을 가져온다.',
  `cmt_write_date` DATETIME NOT NULL COMMENT '댓글작성시간',
  `cmt_modify_date` DATETIME NULL DEFAULT NULL COMMENT '댓글수정시간 : 시간값이 존재하면 수정한 것으로 간주한다.',
  `cmt_division` VARCHAR(1) NOT NULL DEFAULT '0' COMMENT '左1 운영진삭제\\\\\\\\n左2 작성자삭제',
  PRIMARY KEY (`cmt_wrt_write_num`, `cmt_parent`, `cmt_child`),
  UNIQUE INDEX `cmt_code_UNIQUE` (`cmt_code` ASC) VISIBLE,
  INDEX `fk_wrt_write_num_idx` (`cmt_wrt_write_num` ASC) VISIBLE,
  INDEX `fk_mbr_code2_idx` (`cmt_wrt_mbr_code` ASC) VISIBLE,
  CONSTRAINT `fk_mbr_code2`
    FOREIGN KEY (`cmt_wrt_mbr_code`)
    REFERENCES `board_maker`.`writing_table` (`wrt_mbr_code`),
  CONSTRAINT `fk_wrt_write_num`
    FOREIGN KEY (`cmt_wrt_write_num`)
    REFERENCES `board_maker`.`writing_table` (`wrt_write_num`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`comments_issue_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`comments_issue_table` (
  `cmt_isu_cmt_code` VARCHAR(36) NOT NULL COMMENT '코멘트 테이블의 코멘트코드를 가져온다.',
  `cmt_isu_title_division` VARCHAR(1) NOT NULL COMMENT '이슈타이틀구분치\\n\\n원본댓글에 구분치가 발생할 때마다(ex: 0 -> 1), \\n시스템이 해당 구분치에 해당하는 이슈 제목을 배당한다.\\n\\n1 : 운영진 삭제\\n2 : 본인 삭제',
  `cmt_isu_wrt_isu_detail` VARCHAR(50) NOT NULL COMMENT '이슈 메시지 내용을 나타낸다. 운영자에 의한 이슈(운영진삭제)인 경우, 추가로 벌점 내용이 붙을 수 있다.',
  `cmt_isu_wrt_isu_detail2` VARCHAR(500) NULL DEFAULT NULL COMMENT '운영진이 해당 이슈에 대한 자세한 설명을 적을 수 있다.',
  `cmt_isu_issue_date` DATETIME NOT NULL COMMENT '이슈발생시간',
  `cmt_isu_mbr_code` VARCHAR(36) NOT NULL COMMENT '해당 이슈를 발생시킨 행위자(작성자 또는 특정 운영진)를 가져온다.',
  PRIMARY KEY (`cmt_isu_cmt_code`),
  INDEX `fk_cmt_code_idx` (`cmt_isu_cmt_code` ASC) VISIBLE,
  INDEX `fk_mbr_code4_idx` (`cmt_isu_mbr_code` ASC) VISIBLE,
  CONSTRAINT `fk_cmt_code`
    FOREIGN KEY (`cmt_isu_cmt_code`)
    REFERENCES `board_maker`.`comments_table` (`cmt_code`),
  CONSTRAINT `fk_mbr_code4`
    FOREIGN KEY (`cmt_isu_mbr_code`)
    REFERENCES `board_maker`.`member_table` (`mbr_code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`filter_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`filter_table` (
  `ftr_voca` VARCHAR(10) NOT NULL COMMENT '필터링단어 : 필터링 단어를 저장한다.',
  `ftr_ctgry_en_name` VARCHAR(30) NOT NULL COMMENT '카테고리영어명칭 : 카테고리 명칭을 가져와, 각 명칭에 필터링 리스트를 할당한다.',
  PRIMARY KEY (`ftr_voca`),
  INDEX `fk_ctgry_en_name_idx` (`ftr_ctgry_en_name` ASC) VISIBLE,
  CONSTRAINT `fk_ctgry_en_name`
    FOREIGN KEY (`ftr_ctgry_en_name`)
    REFERENCES `board_maker`.`category_table` (`ctgry_en_name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`like_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`like_table` (
  `lke_mbr_code` VARCHAR(36) NOT NULL COMMENT '멤버 코드',
  `lke_wrt_write_num` INT NOT NULL COMMENT '글번호',
  `lke_divsion` VARCHAR(1) NOT NULL COMMENT '구분치\\n\\n左1 : 좋아요	: 언제든지 취소(삭제)될 수 있다.\\n左2 : 추천		: 취소(삭제)할 수 없다.',
  PRIMARY KEY (`lke_mbr_code`, `lke_wrt_write_num`, `lke_divsion`),
  INDEX `fk_wrt_write_num3_idx` (`lke_wrt_write_num` ASC) VISIBLE,
  CONSTRAINT `fk_mbr_code6`
    FOREIGN KEY (`lke_mbr_code`)
    REFERENCES `board_maker`.`member_table` (`mbr_code`),
  CONSTRAINT `fk_wrt_write_num3`
    FOREIGN KEY (`lke_wrt_write_num`)
    REFERENCES `board_maker`.`writing_table` (`wrt_write_num`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`settings_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`settings_table` (
  `main_num` INT NOT NULL COMMENT '메인 테이블에 표시되는 글 수',
  `comments_num` INT NOT NULL COMMENT '최초 댓글 표시 수',
  `add_comments_num` INT NOT NULL COMMENT '추가 로드 댓글 수',
  `score_val` INT NOT NULL COMMENT '가입시 최초 부여 점수')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `board_maker`.`writing_issue_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `board_maker`.`writing_issue_table` (
  `wrt_isu_wrt_write_num` INT NOT NULL COMMENT '글번호 : 글 테이블의 고유값인 글번호를 가져온다.',
  `wrt_isu_title_division` VARCHAR(1) NOT NULL COMMENT '이슈타이틀구분치\\n원본글에 구분치가 발생할 때마다(ex: 00 -> 01 -> 21 ), \\n시스템이 해당 구분치에 해당하는 이슈 제목을 배당한다.\\n\\n1 : 운영진 삭제\\n2 : 본인 삭제\\n3 : 운영진 내림\\n4 : 본인 내림',
  `wrt_isu_detail` VARCHAR(50) NOT NULL COMMENT '이슈 메시지 내용을 나타낸다. 운영자에 의한 이슈(운영진삭제, 운영진내림)인 경우, 추가로 벌점 내용이 붙을 수 있다.',
  `wrt_isu_detail2` VARCHAR(500) NULL DEFAULT NULL COMMENT '운영진이 해당 이슈에 대한 자세한 설명을 적을 수 있다.',
  `wrt_isu_issue_date` DATETIME NOT NULL COMMENT '이슈발생시간',
  `wrt_isu_mbr_code` VARCHAR(36) NOT NULL COMMENT '해당 이슈를 발생시킨 행위자(작성자 또는 특정 운영진)를 가져온다.',
  PRIMARY KEY (`wrt_isu_wrt_write_num`, `wrt_isu_title_division`),
  INDEX `fk_wrt_write_num2_idx` (`wrt_isu_wrt_write_num` ASC) VISIBLE,
  INDEX `fk_mbr_code3_idx` (`wrt_isu_mbr_code` ASC) VISIBLE,
  CONSTRAINT `fk_mbr_code3`
    FOREIGN KEY (`wrt_isu_mbr_code`)
    REFERENCES `board_maker`.`member_table` (`mbr_code`),
  CONSTRAINT `fk_wrt_write_num2`
    FOREIGN KEY (`wrt_isu_wrt_write_num`)
    REFERENCES `board_maker`.`writing_table` (`wrt_write_num`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `board_maker`;

DELIMITER $$
USE `board_maker`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `board_maker`.`limit_one_row`
BEFORE INSERT ON `board_maker`.`settings_table`
FOR EACH ROW
BEGIN
    IF (SELECT COUNT(*) FROM settings_table) >= 1 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cannot insert more than one row into table_name';
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
